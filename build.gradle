buildscript {

    dependencies {

        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
}




apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'com.cjenm.tracking'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'mysql:mysql-connector-java'
    implementation "com.h2database:h2"
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    project.logger.info("docker repository name =  ${project.group}/${bootJar.baseName}")
    println "docker repository name ='${project.group}/${bootJar.baseName}"
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")

    buildArgs(
            [
                    'DEPENDENCY': "dependency"
                    //, 'JAR_FILE': 'build/libs/*.jar'
            ])
}


